package code.codeguru.equinix.soap.oms.shellorder;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.Response;

/**
 * This interface exposes methods to place shell order request
 *
 * This class was generated by Apache CXF 3.3.2
 * Generated source version: 3.3.2
 *
 */
@WebService(targetNamespace = "http://oms.soap.equinix.codeguru.code/shellorder", name = "shellOrderInterface")
@XmlSeeAlso({ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface ShellOrderInterface {

    @WebMethod(operationName = "shellorder")
    public Response<code.codeguru.equinix.soap.oms.shellorder.ShellOrderResponseType> shellorderAsync(

        @WebParam(partName = "ShellOrderRequest", name = "ShellOrderRequest", targetNamespace = "")
        ShellOrderRequestType shellOrderRequest
    );

    @WebMethod(operationName = "shellorder")
    public Future<?> shellorderAsync(

        @WebParam(partName = "ShellOrderRequest", name = "ShellOrderRequest", targetNamespace = "")
        ShellOrderRequestType shellOrderRequest,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<code.codeguru.equinix.soap.oms.shellorder.ShellOrderResponseType> asyncHandler
    );

    /**
     * This operation takes in a parameter ShellOrderRequest type and return ShellOrderResponse type
     */
    @WebMethod
    @WebResult(name = "response", targetNamespace = "", partName = "response")
    public ShellOrderResponseType shellorder(

        @WebParam(partName = "ShellOrderRequest", name = "ShellOrderRequest", targetNamespace = "")
        ShellOrderRequestType shellOrderRequest
    );
}
