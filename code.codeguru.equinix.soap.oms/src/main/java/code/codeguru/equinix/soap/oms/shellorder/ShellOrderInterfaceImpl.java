
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package code.codeguru.equinix.soap.oms.shellorder;

import java.util.UUID;
import java.util.concurrent.Future;
import java.util.logging.Logger;

import javax.xml.ws.AsyncHandler;
import javax.xml.ws.Response;

import org.apache.cxf.annotations.SchemaValidation;
import org.springframework.stereotype.Service;

/**
 * This class was generated by Apache CXF 3.3.2 Generated source version: 3.3.2
 *
 */

@javax.jws.WebService(serviceName = "shellOrderService", portName = "shellOrderInterface", targetNamespace = "http://oms.soap.equinix.codeguru.code/shellorder", wsdlLocation = "classpath:soap/shellorder.wsdl", endpointInterface = "code.codeguru.equinix.soap.oms.shellorder.ShellOrderInterface")
@Service
@SchemaValidation
public class ShellOrderInterfaceImpl implements ShellOrderInterface {

    private static final Logger LOG = Logger.getLogger(ShellOrderInterfaceImpl.class.getName());

    /*
     * (non-Javadoc)
     * 
     * @see
     * code.codeguru.equinix.soap.oms.shellorder.ShellOrderInterface#shellorderAsync
     * (code.codeguru.equinix.soap.oms.shellorder.ShellOrderRequestType
     * shellOrderRequest)*
     */
    public Response<code.codeguru.equinix.soap.oms.shellorder.ShellOrderResponseType> shellorderAsync(
            ShellOrderRequestType shellOrderRequest) {
        return null;
        /* not called */
    }

    /*
     * (non-Javadoc)
     * 
     * @see
     * code.codeguru.equinix.soap.oms.shellorder.ShellOrderInterface#shellorderAsync
     * (code.codeguru.equinix.soap.oms.shellorder.ShellOrderRequestType
     * shellOrderRequest, AsyncHandler<code.codeguru.equinix.soap.oms.shellorder.
     * ShellOrderResponseType> asyncHandler)*
     */
    public Future<?> shellorderAsync(ShellOrderRequestType shellOrderRequest,
            AsyncHandler<code.codeguru.equinix.soap.oms.shellorder.ShellOrderResponseType> asyncHandler) {
        return null;
        /* not called */
    }

    /*
     * (non-Javadoc)
     * 
     * @see
     * code.codeguru.equinix.soap.oms.shellorder.ShellOrderInterface#shellorder(code
     * .codeguru.equinix.soap.oms.shellorder.ShellOrderRequestType
     * shellOrderRequest)*
     */
    public ShellOrderResponseType shellorder(ShellOrderRequestType shellOrderRequest) {
        LOG.info("Executing operation shellorder");
        System.out.println(shellOrderRequest);
        try {
            ShellOrderResponseType _return = new ShellOrderResponseType();
            _return.setOrderNumber(UUID.randomUUID().toString());
            _return.setOrderReferenceId(UUID.randomUUID().toString());
            _return.setSRNumber(UUID.randomUUID().toString());
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
